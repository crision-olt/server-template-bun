module.exports = {
  extends: [
    "next",
    "eslint:recommended",
    "plugin:typescript-sort-keys/recommended",
    "turbo", 
    "prettier"
  ],
  plugins: [
    "@typescript-eslint",
    "simple-import-sort",
    "typescript-sort-keys",
    "unused-imports",
  ],
  overrides: [
    {
      extends: [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      files: ["**/*.{ts,tsx}"],
      rules: {
        "@typescript-eslint/await-thenable": "warn",
        "@typescript-eslint/no-floating-promises": "warn",
        "@typescript-eslint/no-misused-promises": "warn",
      },
    },
  ],
  parser: "@typescript-eslint/parser",
  rules: {
    "@typescript-eslint/consistent-type-imports": "error",
    "react/react-in-jsx-scope": "off",
    "react/hook-use-state": "error",
    "react/jsx-key": "error",
    "react/no-array-index-key": "error",
    "unused-imports/no-unused-imports-ts": "error",
    "unused-imports/no-unused-vars-ts": "error",
    "no-unused-vars": "error",
    "no-unused-expressions": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-unsafe-negation": "error",
    "no-unsafe-optional-chaining": "error",
    "no-use-before-define": "error",
    "complexity": ["error", 10],
    "default-case": "error",
    "eqeqeq": "error",
    "max-depth": ["error", 3],
    "no-alert": "error",
    "no-console": "error",
    "no-empty": "error",
    "no-eval": "error",
    "no-extra-boolean-cast": "error",
    "no-implicit-coercion": "error",
    "no-lonely-if": "error",
    "no-unneeded-ternary": "error",
    "no-var": "error",
    "prefer-const": "error",
    "keyword-spacing": "error",
    "array-bracket-newline": ["error", {"multiline": true}],
    "array-bracket-spacing": ["error", "never"],
    "array-element-newline": ["error", "consistent"],
    "arrow-parens": ["error", "always"],
    "arrow-spacing": 2,
    "block-spacing": 2,
    "comma-dangle": ["error", "always-multiline"],
    "object-curly-newline": ["error", {"multiline": true}],
    "object-curly-spacing": ["error", "always"],
    "space-before-blocks": ["error", "always"],
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-types": "error",
    "@typescript-eslint/consistent-generic-constructors": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/no-import-type-side-effects": "error",
    "@typescript-eslint/no-mixed-enums": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unsafe-enum-comparison": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "object-shorthand": ["error", "always"]
  },
  parserOptions: {
    babelOptions: {
      presets: [require.resolve("next/babel")],
    },
  },
};
